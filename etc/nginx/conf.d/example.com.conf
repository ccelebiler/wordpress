fastcgi_cache_path /var/run/nginx-cache levels=1:2 keys_zone=WORDPRESS:100m inactive=60m;
fastcgi_cache_key "$scheme$request_method$host$request_uri";
fastcgi_cache_use_stale error timeout invalid_header http_500;
fastcgi_ignore_headers Cache-Control Expires Set-Cookie;

server {
        listen 80;
        server_name example.com www.example.com;

        # Handle requests to the dir where Certbot places a temp file to validate that the DNS for the domain resolves to the server.
        location ~ /.well-known/acme-challenge {
                allow all;
                root /var/www/html;
        }

        return 301 https://$host$request_uri;
}

server {
        listen 443 ssl http2;
        server_name www.example.com;

        ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;
        include /etc/nginx/conf.d/options-ssl-nginx.conf;
        ssl_dhparam /etc/ssl/certs/ssl_dhparam.pem;

        return 301 https://example.com:$server_port$request_uri;
}

server {
        listen 443 ssl http2;
        server_name example.com;

        # Secure Sockets Layer (SSL)
        ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;
        include /etc/nginx/conf.d/options-ssl-nginx.conf;
        ssl_dhparam /etc/ssl/certs/ssl_dhparam.pem;

        # Add security headers.
        include /etc/nginx/conf.d/sec-headers-nginx.conf;

        # Disable emitting NGINX version on error pages and in the 'server' response header field.
        server_tokens off;

        # Match max file size to the one set for PHP.
        client_max_body_size 64M;

        set $skip_cache 0;

        # POST requests and URLs with a query string should always go to PHP.
        if ($request_method = POST) {
                set $skip_cache 1;
        }

        if ($query_string != "") {
                set $skip_cache 1;
        }

        # Don't cache URIs containing the following segments.
        if ($request_uri ~* "/wp-admin/|/xmlrpc.php|wp-.*.php|/feed/|index.php|sitemap(_index)?.xml") {
                set $skip_cache 1;
        }

        # Don't use the cache for logged-in users or recent commenters.
        if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {
                set $skip_cache 1;
        }

        # Pass control of individual URI requests to WordPressâ€™s index.php file with the request arguments.
        location / {
                try_files $uri $uri/ /index.php$is_args$args;
        }

        # Handle the PHP processing.
        location ~ \.php$ {
                try_files $uri =404;
                include fastcgi_params;
                fastcgi_split_path_info ^(.+\.php)(/.+)$;
                fastcgi_pass wordpress:9000;
                fastcgi_index index.php;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                fastcgi_param PATH_INFO $fastcgi_path_info;

                # Extend timeouts for handling big files (default is 60s).
                #fastcgi_connect_timeout 300s;
                #fastcgi_read_timeout 300s;
                #fastcgi_send_timeout 300s;

                # Avoid exposing system info.
                fastcgi_hide_header X-Powered-By;

                # Cache dynamic files via FastCGI (see https://www.nginx.com/blog/9-tips-for-improving-wordpress-performance-with-nginx/#fastcgi).
                fastcgi_cache_bypass $skip_cache;
                fastcgi_no_cache $skip_cache;
                fastcgi_cache WORDPRESS;
                fastcgi_cache_valid 60m;
                # Note: Different plugins may check different headers.
                add_header X-Cache $upstream_cache_status;
                add_header X-FastCGI-Cache $upstream_cache_status;

                # Re-add security headers, otherwise FastCGI cache will 'lose' them.
                include /etc/nginx/conf.d/sec-headers-nginx.conf;
        }

        location ~ /purge(/.*) {
                fastcgi_cache_purge WORDPRESS "$scheme$request_method$host$1";
        }

        # Cache static resources.
        location ~* ^.+.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|css|rss|atom|js|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
                access_log off;
                log_not_found off;
                expires max;
        }

        # Disable logging to favicon.ico and robots.txt files.
        location = /robots.txt {
                access_log off;
                log_not_found off;
        }

        location = /favicon.ico {
                access_log off;
                log_not_found off;
        }

        # Deny public access to hidden files.
        location ~ /\. { 
                deny all; 
                access_log off; 
                log_not_found off; 
        }

        # Deny public access to wp-config.php.
        location ~* wp-config.php {
                deny all;
        }

        root /var/www/html;
        index index.php;
}
